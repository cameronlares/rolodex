{"version":3,"sources":["components/card-list/card.component.jsx","components/card-list/cardList.jsx","components/search-box/search-box.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","preventDefault","setState","searchField","target","value","console","log","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAEaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAW,iBAAhB,UACQ,qBAAKC,IAAI,UAAUC,IAAG,+BAA2BH,EAAMI,QAAQC,GAAzC,4BACtB,+BAAKL,EAAMI,QAAQE,KAAnB,OACA,8BAAIN,EAAMI,QAAQG,MAAlB,WCDCC,EAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SAEDD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,UCPlBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACvB,uBACAZ,UAAU,SACRa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCCG,E,kDAvCb,aAAe,IAAD,8BACZ,gBAQHH,aAAc,SAACI,GACbA,EAAEC,iBACH,EAAKC,SAAS,CAAEC,YAAaH,EAAEI,OAAOC,QAAS,kBAC7CC,QAAQC,IAAI,EAAKC,WAVjB,EAAKA,MAAQ,CACXhB,SAAU,GACVW,YAAa,IAJH,E,qDAgBd,WAAqB,IAAD,OAClBM,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKX,SAAS,CAAEV,SAAUqB,S,oBAE/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/BhB,EADD,EACCA,SAAUW,EADX,EACWA,YAGZY,EAAmBvB,EAASwB,QAAO,SAACxB,GAAD,OACvCA,EAASH,KAAK4B,cAAcC,SAASf,EAAYc,kBAGnD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAc,kBAAkBC,aAAekB,KAAKlB,eAC/D,cAAC,EAAD,CAAUJ,SAAUuB,W,GAlCVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0fa43600.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\nexport const Card = (props) => (\n    <div className= 'card-container'>\n            <img alt=\"monster\" src= {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\n            <h2>{props.monster.name} </h2>\n            <p>{props.monster.email} </p>\n    </div>\n)","import React from 'react'\nimport './card-list.styles.css'\nimport {Card} from '../card-list/card.component'\n\n\nexport const CardList = props =>  {\n    \n    return <div className='card-list'>\n          {\n          props.monsters.map(monster =>\n            <Card key={monster.id} monster = {monster} />)\n        }\n    </div>\n    \n}\n","import React from \"react\";\nimport \"./search-box.styles.css\";\n\nexport const SearchBox = ({placeholder, handleChange }) => (\n  <input\n  className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n\n\n//Used props for the placeholder and handleChange\n//Lifting state up","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport { CardList } from \"./components/card-list/cardList\";\nimport {SearchBox}  from \"./components/search-box/search-box\"\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: '',\n\n\n    };\n  }\n handleChange= (e) => { //use arrow function, it automatically bind, automatically lexical scope\n   e.preventDefault()\n  this.setState({ searchField: e.target.value }, () =>\n    console.log(this.state)\n  )\n }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((res) => res.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    //equavilent of this.state.monsters\n    //equavilent of this.state.searchField\n    const filteredMonsters = monsters.filter((monsters) =>\n      monsters.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder = \"search monsters\" handleChange ={this.handleChange}/>\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}